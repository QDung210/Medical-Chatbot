version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_chatbot
    environment:
      - POSTGRES_DB=medical_chatbot
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medical-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-local
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./snapshots:/snapshots
    networks:
      - medical-network

  fastapi:
    build:
      context: ./rag_pipeline
      dockerfile: Dockerfile
    image: medical-fastapi:latest
    container_name: medical-fastapi
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - QDRANT_URL=http://qdrant:6333
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=medical_chatbot
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    volumes:
      - ./.env:/app/.env:ro
      - ./data:/app/data:ro
      - model_cache:/app/.cache
    networks:
      - medical-network
    depends_on:
      - postgres
      - qdrant
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 600s

  streamlit:
    build:
      context: ./streamlit
      dockerfile: Dockerfile
    image: medical-streamlit:latest
    container_name: medical-streamlit
    ports:
      - "8501:8501"
    environment:
      - FASTAPI_URL=http://fastapi:8000
    networks:
      - medical-network
    depends_on:
      fastapi:
        condition: service_healthy

networks:
  medical-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  qdrant_data:
    driver: local
  model_cache:
    driver: local 